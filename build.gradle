/*
 * MIT License
 *
 * Copyright (c) "2023" Logicamp
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0' apply false
}



apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
//apply plugin: 'checkstyle' TODO add if needed
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots/"
        mavenContent {
            snapshotsOnly()
        }
    }
}

ext {
    javaVersion = '17'
    flinkVersion = '1.18.1'
    slf4jVersion = '1.7.36'
    log4jVersion = '2.17.1'
}

dependencies {
    implementation 'org.mongodb:bson:4.7.1'
    implementation 'com.arangodb:arangodb-java-driver:7.1.0'
    implementation 'com.arangodb:core:7.1.0'
    implementation 'com.arangodb:http-protocol:7.1.0'
    implementation 'com.arangodb:vst-protocol:7.1.0'
    implementation 'com.arangodb:jackson-serde-json:7.1.0'
    implementation 'com.arangodb:jackson-serde-vpack:7.1.0'
    implementation 'com.arangodb:arangodb-java-driver-shaded:7.1.0'
    implementation 'com.arangodb:velocypack:3.0.0'
    implementation 'com.arangodb:jackson-dataformat-velocypack:4.1.0'
    testImplementation 'junit:junit:4.11'
    testImplementation "org.apache.flink:flink-clients:${flinkVersion}"
    shadow "org.apache.flink:flink-core:${flinkVersion}"
    shadow "org.apache.flink:flink-connector-base:${flinkVersion}"
    shadow "org.apache.flink:flink-streaming-java:${flinkVersion}"
    shadow "org.apache.flink:flink-json:${flinkVersion}"
    shadow "org.apache.flink:flink-runtime:${flinkVersion}"
    shadow "org.apache.flink:flink-table-planner-loader:${flinkVersion}"
    shadow "org.slf4j:slf4j-log4j12:1.7.26"
    //implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    //implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
}

group = 'top.logicamp.flink_arangodb_connector'
version = '1.1.0-SNAPSHOT'
description = 'flink-arangodb-connector'
java.sourceCompatibility = JavaVersion.VERSION_11

// add solution source dirs:
sourceSets {
    main.java.srcDirs += 'src/java'
    tasks.withType(ScalaCompile) {
        main.scala.srcDirs += 'src/scala'
    }

    // Add shadow configuration to runtime class path so that the
    // dynamically-generated tasks by IntelliJ are able to run and have
    // all dependencies they need. (Luckily, this does not influence what
    // ends up in the final shadowJar.)
    main.runtimeClasspath += configurations.shadow

    test.compileClasspath += configurations.shadow
    test.runtimeClasspath += configurations.shadow
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}


jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version'),
                'Main-Class': 'top.logicamp.logiline.flink_arangodb_connector.Main'
    }
}

shadowJar {
    mergeServiceFiles()
    dependencies {
        exclude(dependency('org.apache.logging.log4j:log4j-to-slf4j'))
        exclude(dependency('org.slf4j:slf4j-api'))
    }
}

assemble.dependsOn(shadowJar)
